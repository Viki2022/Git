JSON

1.	Создать внешний репозиторий c названием JSON:
 Repositories -> New -> Create repository

2.	Клонировать репозиторий JSON на локальный компьютер: 
JSON -> Code -> Copied
cd QA/Git -> git clone git@github.com:Viki2022/JSON.git 

3.	Внутри локального JSON создать файл “new.json”:
touch new.json 

4.	Добавить файл под гит: 
git add new.json  

5.	Закоммитить файл: 
git commit –m “add new json file”

6.	Отправить файл на внешний GitHub репозиторий: 
git push

7.	Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: 
cat >> new.json
{
 “full_name”: “Vika Bakumava”,
 “age”: 37,
 “number_of_pets”: 2, 
 “future_salary, USD”: 1000 
}
 
8. Отправить изменения на внешний репозиторий: 
git add .
git commit –m “edit file new.json”
git push

9.Создать файл preferences.json:  
touch preferences.json

10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON:
cat >> preferences.json 
{
 “favorite_movie”: “Gandi”,
 “favorite_serial”: “Shani Dev”,
 “favorite_food”: “fruits and sweets”,
 “favorite_season”: “summer”,
 “country_to_visit”: “Japan”
}

 11. Создать файл sklls.json, добавить информацию о скилах, которые будут изучены на курсе в формате JSON:
cat > sklls.json 
{
 "skills":
              [
               “Terminal”,
               "JSON", 
               "XML", 
               "API", 
              "Postman", 
              "Fidler", 
              "Dev Tools", 
              "SQL", 
              "Git", 
              "Jmeter", 
              "Scrum"
             “JavaScript”
             ]
}

 12. Отправить сразу 2 файла на внешний репозиторий:
git add .
git commit –m “add two new json files”
git push

13. На веб интерфейсе создать файл bug_report.json: 
add file —> create new file

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе:  

“add bug_report.json”—> commit new file 

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON: 
bug_report.json —> Edit this file
{
    "id": 1,
    "tytle": "CONTACT FORM – No confirmation message is shown",
    "steps_to_reproduce":
		                [
		                 "a. Filled out contact form",
		                 "b. Clicked on submit",
                                             “c. form loaded a while”,
                                             “d. contact form showed “<empty>”
		                ],
    "actual_results": “<empty>”,
    "expected_results": "Thank you for contacting us, we will get in touch shortly",
    "severity": "Critical"
    }

 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе: 
“edit file bug_report.json”—> commit changes 

 17. Синхронизировать внешний и локальный репозиторий JSON:

 git fetch —> git pull

XML

1.	Создать внешний репозиторий c названием XML: 
Repositories -> New -> Create repository

2.	Клонировать репозиторий XML на локальный компьютер: 
XML -> Code -> Copied 
cd QA/Git -> git clone git@github.com:Viki2022/ XML.git 

3.	Внутри локального XML создать файл “new.xml”: 
touch new.xml

4.	Добавить файл под гит: 
git add new.xml

5.	Закоммитить файл: 
git commit –m “add new xml file”

6.	Отправить файл на внешний GitHub репозиторий: 
git push

 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML:  
cat >> new.xml 
<information>
                          <full_name>Vika Bakumava</full_name>
                          <age>37</age>
                          <number of pets>2</number of pets>
                          <future_salary, USD> 1000</future_salary, USD>
</information>      

 8. Отправить изменения на внешний репозиторий:
git add .
git commit –m “edit file new.xml” 
git push

9.Создать файл preferences.xml: 
touch preferences.xml
 
10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML: 
cat >> preferences.xml
<information> 
                          <favorite_movie>Gandi</favorite_movie>
                          <favorite_serial>Shani Dev</favorite_serial>
                          <favorite_food>fruits and sweets</favorite_food>
                          <favorite_season>summer</favorite_season>
                          <country_to_visit>Japan</country_to_visit>
</information>      

 11. Создать файл sklls.xml, добавить информацию о скилах, которые будут изучены на курсе в формате XML:
cat > sklls.xml 
<xml>
           <skills> Terminal, JSON, XML, API, Postman, Fidler, Dev Tools, SQL, Git, Jmeter, Scrum, 
           JavaScript</skills>
</xml>

  12. Сделать коммит в одну строку: 
git commit –am “create two new xml files”

 13. Отправить сразу 2 файла на внешний репозиторий: 
git push

14. На веб интерфейсе создать файл bug_report.xml: 
add file —> create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе:  

“add bug_report.xml”—> commit new file

 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате JSON: 
bug_report.xml —> Edit this file
<report>
                <id>1</id>
                <tytle>CONTACT FORM – No confirmation message is shown</tytle>
                <steps_to_reproduce>Filled out contact form, clicked on submit, form loaded a while,                                      
                contact form showed “<empty>”</steps_to_reproduce>
                <actual_results>“<empty”</actual_results>
                <expected_results>Thank you for contacting us, we will get in touch                                                                                               
                shortly</expected_results>
                <severity>Critical</severity>
</report>

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: 
“edit file bug_report.xml”—> commit changes

 18. Синхронизировать внешний и локальный репозиторий JSON:

 git fetch —> git pull
 

TXT 

1.	Создать внешний репозиторий c названием TXT: 
Repositories -> New -> Create repository 
 
2.	Клонировать репозиторий TXT на локальный компьютер: 
TXT -> Code -> Copied
cd QA/Git -> git clone git@github.com:Viki2022/ TXT.git 

3.	Внутри локального TXT создать файл “new.txt”: 
touch new.txt

4.	Добавить файл под гит: 
git add new.txt

5.	Закоммитить файл: 
git commit –m “add new txt file”

6.	Отправить файл на внешний GitHub репозиторий: 
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat >> new.txt
full_name: Vika Bakumava,
age: 37,
number_of_pets: 2, 
future_salary, USD: 1000

 8. Отправить изменения на внешний репозиторий:
git add .
git commit –m “edit file new.txt”
git push

9.Создать файл preferences.txt: 
touch preferences.txt
 
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat >> preferences.txt
favorite_movie: Gandi,
favorite_serial: Shani Dev,
favorite_food: fruits and sweets,
favorite_season: summer,
country_to_visit: Japan

 11. Создать файл sklls.txt, добавить информацию о скиллах которые будут изучены на курсе в формате TXT. 
cat > sklls.txt
Terminal, JSON, XML, API, Postman, Fidler, Dev Tools, SQL, Git, Jmeter, Scrum, JavaScript

 12. Сделать коммит в одну строку:  
git commit –am “create two new txt files”

 13. Отправить сразу 2 файла на внешний репозиторий:
git push

 14. На веб интерфейсе создать файл bug_report.txt:
add file —> create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
“add bug_report.txt”—> commit new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
bug_report.txt —> Edit this file
    id: 1,
    tytle: CONTACT FORM – No confirmation message is shown,
    steps_to_reproduce:
          a.	Filled out contact form,
          b.	Clicked on submit,
          c.	form loaded a while,
          d.	contact form showed “<empty>”, 
    actual_results: “<empty>”,
    expected_results: "Thank you for contacting us, we will get in touch shortly",
    severity: Critical

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
“edit file bug_report.txt”—> commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT: 
git fetch —

